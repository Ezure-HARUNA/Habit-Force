{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\burim\\\\OneDrive\\\\portofolio\\\\nextjs\\\\habitforce\\\\pages\\\\Chart.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Title from './Title'; // +\n\nimport Typography from '@material-ui/core/Typography'; // +\n// import FormGroup from '@material-ui/core/FormGroup';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst useStyles = makeStyles({\n  chartContext: {\n    flex: 1\n  }\n});\nexport default function Chart() {\n  const theme = useTheme();\n  const classes = useStyles(); // checkbox \n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  });\n\n  const handleChange = event => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [event.target.name]: event.target.checked\n    }));\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Today\"), __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"\\u3084\\u308A\\u305F\\u3044\\u3053\\u3068\\u30EA\\u30B9\\u30C8\"), __jsx(Typography, {\n    color: \"textSecondary\",\n    className: classes.chartContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"\\u203B\\u3067\\u304D\\u308B\\u304B\\u3001\\u3067\\u306A\\u304F\\u3001\\u3084\\u308A\\u305F\\u3044\\u304B\\u3001\\u3067\\u66F8\\u304F\\uFF01\"), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: state.checkedB,\n      onChange: handleChange,\n      name: \"checkedB\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 18\n      }\n    }),\n    label: \"Primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }));\n} // import React from 'react';\n// import Link from 'next/link';\n// import { useTheme } from '@material-ui/core/styles';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Title from './Title';\n// import Typography from '@material-ui/core/Typography';\n// import Grid from '@material-ui/core/Grid';\n// import Paper from '@material-ui/core/Paper';\n// import FormGroup from '@material-ui/core/FormGroup';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n// <div>\n// <Title>やりたいことリスト</Title>\n// <Typography color=\"textSecondary\" className={classes.chartContext}>\n//     ※できるか、でなく、やりたいか、で書く！\n// </Typography>\n// <Grid container spacing={3}>\n//     <Grid item xs={10} md={7} lg={8}>\n//         <Paper >\n//             ペーパー\n//         </Paper>\n//     </Grid>\n// </Grid>\n// <FormGroup row>\n//     <FormControlLabel\n//         control={\n//             <Checkbox\n//                 checked={state.checkedB}\n//                 onChange={handleChange}\n//                 name=\"checkedB\"\n//                 color=\"primary\"\n//             />\n//         }\n//         label=\"Primary\"\n//     />\n// </FormGroup>\n// </div>\n// const theme = useTheme();\n// const classes = useStyles(); \n//  // checkbox \n//  const [state, setState] = React.useState({\n//     checkedA: true,\n//     checkedB: true,\n//     checkedF: true,\n//     checkedG: true,\n//   });\n//   const handleChange = (event) => {\n//     setState({ ...state, [event.target.name]: event.target.checked });\n//   };","map":{"version":3,"sources":["C:/Users/burim/OneDrive/portofolio/nextjs/habitforce/pages/Chart.js"],"names":["React","useState","useTheme","makeStyles","Title","Typography","FormControlLabel","Checkbox","useStyles","chartContext","flex","Chart","theme","classes","state","setState","checkedA","checkedB","checkedF","checkedG","handleChange","event","target","name","checked"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;AAEA;;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAMA,MAAMC,SAAS,GAAGL,UAAU,CAAC;AACzBM,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE;AADM;AADW,CAAD,CAA5B;AAMA,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAMC,KAAK,GAAGV,QAAQ,EAAtB;AACA,QAAMW,OAAO,GAAGL,SAAS,EAAzB,CAF4B,CAI5B;;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBf,KAAK,CAACC,QAAN,CAAe;AACzCe,IAAAA,QAAQ,EAAE,IAD+B;AAEzCC,IAAAA,QAAQ,EAAE,IAF+B;AAGzCC,IAAAA,QAAQ,EAAE,IAH+B;AAIzCC,IAAAA,QAAQ,EAAE;AAJ+B,GAAf,CAA1B;;AAOF,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BN,IAAAA,QAAQ,iCAAMD,KAAN;AAAa,OAACO,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA/C,OAAR;AACD,GAFD;;AAIA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAFJ,EAGI,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC,eAAlB;AAAkC,IAAA,SAAS,EAAEX,OAAO,CAACJ,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gIAHJ,EAMK,MAAC,gBAAD;AACI,IAAA,OAAO,EACH,MAAC,QAAD;AACI,MAAA,OAAO,EAAEK,KAAK,CAACG,QADnB;AAEI,MAAA,QAAQ,EAAEG,YAFd;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,KAAK,EAAC,SAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AASG,IAAA,KAAK,EAAC,SATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANL,CADF;AAoBD,C,CAKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Title from './Title';\r\n\r\n// +\r\nimport Typography from '@material-ui/core/Typography';\r\n// +\r\n\r\n// import FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n \r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    chartContext: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\nexport default function Chart() {\r\n    const theme = useTheme();\r\n    const classes = useStyles(); \r\n\r\n    // checkbox \r\n    const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedF: true,\r\n    checkedG: true,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <Title>Today</Title>\r\n        <Title>やりたいことリスト</Title>\r\n        <Typography color=\"textSecondary\" className={classes.chartContext}>\r\n            ※できるか、でなく、やりたいか、で書く！\r\n        </Typography>\r\n         <FormControlLabel\r\n             control={\r\n                 <Checkbox\r\n                     checked={state.checkedB}\r\n                     onChange={handleChange}\r\n                     name=\"checkedB\"\r\n                     color=\"primary\"\r\n                />\r\n            }\r\n            label=\"Primary\"\r\n        />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import Link from 'next/link';\r\n// import { useTheme } from '@material-ui/core/styles';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Title from './Title';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Paper from '@material-ui/core/Paper';\r\n\r\n\r\n// import FormGroup from '@material-ui/core/FormGroup';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\n\r\n\r\n// <div>\r\n// <Title>やりたいことリスト</Title>\r\n// <Typography color=\"textSecondary\" className={classes.chartContext}>\r\n//     ※できるか、でなく、やりたいか、で書く！\r\n// </Typography>\r\n// <Grid container spacing={3}>\r\n//     <Grid item xs={10} md={7} lg={8}>\r\n//         <Paper >\r\n//             ペーパー\r\n//         </Paper>\r\n//     </Grid>\r\n// </Grid>\r\n// <FormGroup row>\r\n//     <FormControlLabel\r\n//         control={\r\n//             <Checkbox\r\n//                 checked={state.checkedB}\r\n//                 onChange={handleChange}\r\n//                 name=\"checkedB\"\r\n//                 color=\"primary\"\r\n//             />\r\n//         }\r\n//         label=\"Primary\"\r\n//     />\r\n// </FormGroup>\r\n// </div>\r\n\r\n// const theme = useTheme();\r\n// const classes = useStyles(); \r\n\r\n//  // checkbox \r\n//  const [state, setState] = React.useState({\r\n//     checkedA: true,\r\n//     checkedB: true,\r\n//     checkedF: true,\r\n//     checkedG: true,\r\n//   });\r\n\r\n//   const handleChange = (event) => {\r\n//     setState({ ...state, [event.target.name]: event.target.checked });\r\n//   };"]},"metadata":{},"sourceType":"module"}