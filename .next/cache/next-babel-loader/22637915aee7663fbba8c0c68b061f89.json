{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\burim\\\\OneDrive\\\\portofolio\\\\nextjs\\\\habitforce\\\\pages\\\\Chart.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Title from './Title';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst useStyles = makeStyles({\n  chartContext: {\n    flex: 1\n  }\n});\n\nconst Chart = props => __jsx(React.Fragment, null, __jsx(Title, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }\n}, \"\\u3084\\u308A\\u305F\\u3044\\u3053\\u3068\\u30EA\\u30B9\\u30C8\"), __jsx(Typography, {\n  color: \"textSecondary\",\n  className: classes.chartContext,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }\n}, \"\\u203B\\u3067\\u304D\\u308B\\u304B\\u3001\\u3067\\u306A\\u304F\\u3001\\u3084\\u308A\\u305F\\u3044\\u304B\\u3001\\u3067\\u66F8\\u304F\\uFF01\"), __jsx(Grid, {\n  container: true,\n  spacing: 3,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }\n}, __jsx(Grid, {\n  item: true,\n  xs: 10,\n  md: 7,\n  lg: 8,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 17\n  }\n}, __jsx(Paper, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }\n}, \"\\u30DA\\u30FC\\u30D1\\u30FC\"))), __jsx(FormGroup, {\n  row: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }\n}, __jsx(FormControlLabel, {\n  control: __jsx(Checkbox, {\n    checked: state.checkedB,\n    onChange: handleChange,\n    name: \"checkedB\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }),\n  label: \"Primary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 17\n  }\n})));\n\nChart.getInitialProps = async function () {\n  const theme = useTheme();\n  const classes = useStyles(); // checkbox \n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  });\n\n  const handleChange = event => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [event.target.name]: event.target.checked\n    }));\n  };\n};\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/burim/OneDrive/portofolio/nextjs/habitforce/pages/Chart.js"],"names":["Link","useTheme","makeStyles","Title","Typography","Grid","Paper","FormGroup","FormControlLabel","Checkbox","useStyles","chartContext","flex","Chart","props","classes","state","checkedB","handleChange","getInitialProps","theme","setState","React","useState","checkedA","checkedF","checkedG","event","target","name","checked"],"mappings":";;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAGA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAC;AACzBS,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE;AADM;AADW,CAAD,CAA5B;;AASA,MAAMC,KAAK,GAAIC,KAAD,IAEN,4BACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DADJ,EAEI,MAAC,UAAD;AAAY,EAAA,KAAK,EAAC,eAAlB;AAAkC,EAAA,SAAS,EAAEC,OAAO,CAACJ,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8HAFJ,EAKI,MAAC,IAAD;AAAM,EAAA,SAAS,MAAf;AAAgB,EAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,IAAD;AAAM,EAAA,IAAI,MAAV;AAAW,EAAA,EAAE,EAAE,EAAf;AAAmB,EAAA,EAAE,EAAE,CAAvB;AAA0B,EAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CADJ,CALJ,EAYI,MAAC,SAAD;AAAW,EAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,gBAAD;AACI,EAAA,OAAO,EACH,MAAC,QAAD;AACI,IAAA,OAAO,EAAEK,KAAK,CAACC,QADnB;AAEI,IAAA,QAAQ,EAAEC,YAFd;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,KAAK,EAAC,SAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR;AASI,EAAA,KAAK,EAAC,SATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CAZJ,CAFR;;AA8BAL,KAAK,CAACM,eAAN,GAAwB,kBAAkB;AACtC,QAAMC,KAAK,GAAGnB,QAAQ,EAAtB;AACA,QAAMc,OAAO,GAAGL,SAAS,EAAzB,CAFsC,CAItC;;AACA,QAAM,CAACM,KAAD,EAAQK,QAAR,IAAoBC,KAAK,CAACC,QAAN,CAAe;AACrCC,IAAAA,QAAQ,EAAE,IAD2B;AAErCP,IAAAA,QAAQ,EAAE,IAF2B;AAGrCQ,IAAAA,QAAQ,EAAE,IAH2B;AAIrCC,IAAAA,QAAQ,EAAE;AAJ2B,GAAf,CAA1B;;AAOE,QAAMR,YAAY,GAAIS,KAAD,IAAW;AAC9BN,IAAAA,QAAQ,iCAAML,KAAN;AAAa,OAACW,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA/C,OAAR;AACD,GAFD;AAGL,CAfD;;AAmBA,eAAejB,KAAf","sourcesContent":["import Link from 'next/link';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Title from './Title';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles({\r\n    chartContext: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n\r\n\r\n\r\nconst Chart = (props) =>  (\r\n        \r\n        <>\r\n            <Title>やりたいことリスト</Title>\r\n            <Typography color=\"textSecondary\" className={classes.chartContext}>\r\n                ※できるか、でなく、やりたいか、で書く！\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={10} md={7} lg={8}>\r\n                    <Paper >\r\n                        ペーパー\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            <FormGroup row>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                            checked={state.checkedB}\r\n                            onChange={handleChange}\r\n                            name=\"checkedB\"\r\n                            color=\"primary\"\r\n                        />\r\n                    }\r\n                    label=\"Primary\"\r\n                />\r\n            </FormGroup>\r\n        </>\r\n)\r\n\r\nChart.getInitialProps = async function () {\r\n    const theme = useTheme();\r\n    const classes = useStyles(); \r\n\r\n    // checkbox \r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedF: true,\r\n        checkedG: true,\r\n      });\r\n    \r\n      const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n      };\r\n}\r\n\r\n\r\n\r\nexport default Chart;\r\n\r\n"]},"metadata":{},"sourceType":"module"}