{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\burim\\\\OneDrive\\\\portofolio\\\\nextjs\\\\habitforce\\\\pages\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport Link from 'next/link';\n\nvar App = function App() {\n  _s();\n\n  var _useState = useState([]),\n      todos = _useState[0],\n      setTodos = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      tmpTodo = _useState2[0],\n      setTmpTodo = _useState2[1];\n\n  var addTodo = function addTodo() {\n    // formの内容が空白の場合はalertを出す\n    if (tmpTodo === \"\") {\n      alert(\"文字を入力してください\");\n      return;\n    }\n\n    setTodos([].concat(_toConsumableArray(todos), [tmpTodo]));\n    setTmpTodo(\"\");\n  }; // todoを削除する処理\n\n\n  var deleteTodo = function deleteTodo(index) {\n    var newTodos = todos.filter(function (todo, todoIndex) {\n      return index !== todoIndex;\n    });\n    setTodos(newTodos);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Todo App\"), \"Read \", __jsx(Link, {\n    href: \"/habit/top\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 36\n    }\n  }, \"this page!\")), __jsx(\"div\", {\n    className: \"form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"todo\",\n    onChange: function onChange(e) {\n      return setTmpTodo(e.target.value);\n    },\n    value: tmpTodo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: addTodo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Add\")), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, todos.map(function (todo, index) {\n    return __jsx(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, todo, __jsx(\"button\", {\n      onClick: function onClick() {\n        return deleteTodo(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"x\"));\n  })), __jsx(\"style\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"\\n        h1 {\\n          text-align: center;\\n        }\\n        .form {\\n          display: flex;\\n          justify-content: center;\\n        }\\n        ul {\\n          width: 200px;\\n          margin: 10px auto;\\n        }\\n      \"));\n};\n\n_s(App, \"zqkPiAEs3M30FBNDVtvfmnXIlI8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/burim/OneDrive/portofolio/nextjs/habitforce/pages/index.jsx"],"names":["useState","Link","App","todos","setTodos","tmpTodo","setTmpTodo","addTodo","alert","deleteTodo","index","newTodos","filter","todo","todoIndex","e","target","value","map"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA;;AAAA,kBACUF,QAAQ,CAAC,EAAD,CADlB;AAAA,MACTG,KADS;AAAA,MACFC,QADE;;AAAA,mBAEcJ,QAAQ,CAAC,EAAD,CAFtB;AAAA,MAETK,OAFS;AAAA,MAEAC,UAFA;;AAIhB,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB;AACA,QAAIF,OAAO,KAAK,EAAhB,EAAoB;AAClBG,MAAAA,KAAK,CAAC,aAAD,CAAL;AACA;AACD;;AACDJ,IAAAA,QAAQ,8BAAKD,KAAL,IAAYE,OAAZ,GAAR;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GARD,CAJgB,CAchB;;;AACA,MAAMG,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAC1B,QAAMC,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa,UAACC,IAAD,EAAOC,SAAP,EAAqB;AACjD,aAAOJ,KAAK,KAAKI,SAAjB;AACD,KAFgB,CAAjB;AAGAV,IAAAA,QAAQ,CAACO,QAAD,CAAR;AACD,GALD;;AAOA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,WAEO,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAxB,CAFP,EAGE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAE,kBAAAI,CAAC;AAAA,aAAIT,UAAU,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA,KAHb;AAIE,IAAA,KAAK,EAAEZ,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAQ,IAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,CAHF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACe,GAAN,CAAU,UAACL,IAAD,EAAOH,KAAP,EAAiB;AAC1B,WACE;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,IADH,EAGE;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMJ,UAAU,CAACC,KAAD,CAAhB;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,CADF;AAOD,GARA,CADH,CAZF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kPAvBF,CADF;AAuCD,CA7DD;;GAAMR,G;;KAAAA,G;AA+DN,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\r\nimport Link from 'next/link'\r\n\r\nconst App = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [tmpTodo, setTmpTodo] = useState(\"\");\r\n\r\n  const addTodo = () => {\r\n    // formの内容が空白の場合はalertを出す\r\n    if (tmpTodo === \"\") {\r\n      alert(\"文字を入力してください\");\r\n      return;\r\n    }\r\n    setTodos([...todos, tmpTodo]);\r\n    setTmpTodo(\"\");\r\n  };\r\n\r\n  // todoを削除する処理\r\n  const deleteTodo = index => {\r\n    const newTodos = todos.filter((todo, todoIndex) => {\r\n      return index !== todoIndex;\r\n    });\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Todo App</h1>\r\n      Read <Link href=\"/habit/top\"><a>this page!</a></Link>\r\n      <div className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"todo\"\r\n          onChange={e => setTmpTodo(e.target.value)}\r\n          value={tmpTodo}\r\n        />\r\n        <button onClick={addTodo}>Add</button>\r\n      </div>\r\n      <ul>\r\n        {todos.map((todo, index) => {\r\n          return (\r\n            <li key={index}>\r\n              {todo}\r\n              {/* 削除ボタンを追加 */}\r\n              <button onClick={() => deleteTodo(index)}>x</button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <style>{`\r\n        h1 {\r\n          text-align: center;\r\n        }\r\n        .form {\r\n          display: flex;\r\n          justify-content: center;\r\n        }\r\n        ul {\r\n          width: 200px;\r\n          margin: 10px auto;\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}