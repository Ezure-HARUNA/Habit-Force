{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\burim\\\\OneDrive\\\\portofolio\\\\nextjs\\\\habitforce\\\\pages\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\n\nvar App = function App() {\n  _s();\n\n  // 作成したtodoを入れておくためのstate\n  var _useState = useState([]),\n      todos = _useState[0],\n      setTodos = _useState[1]; // フォームに入力された値をtodoに登録するまでに入れておくためのstate\n\n\n  var _useState2 = useState(\"\"),\n      tmpTodo = _useState2[0],\n      setTmpTodo = _useState2[1];\n\n  var addTodo = function addTodo() {\n    setTodos([].concat(_toConsumableArray(todos), [tmpTodo]));\n    setTmpTodo(\"\");\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Todo App\"), __jsx(\"div\", {\n    className: \"form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"todo\" // formの入力値をtmpTodoで持っておく\n    ,\n    onChange: function onChange(e) {\n      return setTmpTodo(e.target.value);\n    },\n    value: tmpTodo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: addTodo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Add\")), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, todos.map(function (todo, index) {\n    return __jsx(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 18\n      }\n    }, todo);\n  })), __jsx(\"style\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"\\n        h1 {\\n          text-align: center;\\n        }\\n        .form {\\n          display: flex;\\n          justify-content: center;\\n        }\\n        ul {\\n          width: 200px;\\n          margin: 10px auto;\\n        }\\n      \"));\n};\n\n_s(App, \"zqkPiAEs3M30FBNDVtvfmnXIlI8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/burim/OneDrive/portofolio/nextjs/habitforce/pages/index.jsx"],"names":["useState","App","todos","setTodos","tmpTodo","setTmpTodo","addTodo","e","target","value","map","todo","index"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA;;AAChB;AADgB,kBAEUD,QAAQ,CAAC,EAAD,CAFlB;AAAA,MAETE,KAFS;AAAA,MAEFC,QAFE,iBAGhB;;;AAHgB,mBAIcH,QAAQ,CAAC,EAAD,CAJtB;AAAA,MAITI,OAJS;AAAA,MAIAC,UAJA;;AAMhB,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBH,IAAAA,QAAQ,8BAAKD,KAAL,IAAYE,OAAZ,GAAR;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAHD;;AAKA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP,CAGE;AAHF;AAIE,IAAA,QAAQ,EAAE,kBAAAE,CAAC;AAAA,aAAIF,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA,KAJb;AAKE,IAAA,KAAK,EAAEL,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAQ,IAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,CAFF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACQ,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC1B,WAAO;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,IAAjB,CAAP;AACD,GAFA,CADH,CAZF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kPAjBF,CADF;AAiCD,CA5CD;;GAAMV,G;;KAAAA,G;AA8CN,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst App = () => {\r\n  // 作成したtodoを入れておくためのstate\r\n  const [todos, setTodos] = useState([]);\r\n  // フォームに入力された値をtodoに登録するまでに入れておくためのstate\r\n  const [tmpTodo, setTmpTodo] = useState(\"\");\r\n\r\n  const addTodo = () => {\r\n    setTodos([...todos, tmpTodo]);\r\n    setTmpTodo(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Todo App</h1>\r\n      <div className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"todo\"\r\n          // formの入力値をtmpTodoで持っておく\r\n          onChange={e => setTmpTodo(e.target.value)}\r\n          value={tmpTodo}\r\n        />\r\n        <button onClick={addTodo}>Add</button>\r\n      </div>\r\n      <ul>\r\n        {todos.map((todo, index) => {\r\n          return <li key={index}>{todo}</li>;\r\n        })}\r\n      </ul>\r\n      <style>{`\r\n        h1 {\r\n          text-align: center;\r\n        }\r\n        .form {\r\n          display: flex;\r\n          justify-content: center;\r\n        }\r\n        ul {\r\n          width: 200px;\r\n          margin: 10px auto;\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}